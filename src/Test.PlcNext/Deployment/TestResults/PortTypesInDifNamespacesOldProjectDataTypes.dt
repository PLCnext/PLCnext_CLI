NAMESPACE PortTypesInDifNamespaces.NestedNamespace
TYPE
    InNestedNs : STRUCT
        u1 : UDINT;
        u2 : UDINT;
        u3 : u3Array;
        innerStruct : PortTypesInDifNamespaces.NestedNamespace.Test;
        u4 : PortTypesInDifNamespaces.NestedNamespace.MyNestedEnums.EnumInNestedNs;
        u5 : PortTypesInDifNamespaces.NestedNamespace.MyEnums.EnumTest;
        someString : STRING;
        myArrayOfString : myArrayOfStringArray;
    END_STRUCT
END_TYPE
END_NAMESPACE

NAMESPACE OtherNamespace
TYPE
    InOtherNamespace : STRUCT
        i1 : UINT;
        i2 : UINT;
        i3 : i3Array;
        innerStruct : OtherNamespace.Test;
        i4 : OtherNamespace.MyOtherEnums.EnumInOtherNs;
        i5 : OtherNamespace.MyEnums.EnumTest;
        someString : STRING;
        myArrayOfString : myArrayOfStringArray;
    END_STRUCT
END_TYPE
END_NAMESPACE

NAMESPACE OtherNamespace
TYPE
    Test : STRUCT
        i1 : USINT;
        i2 : USINT;
        i3 : i3Array;
        arrayOfEnums : arrayOfEnumsArray;
        i4 : OtherNamespace.MyOtherEnums.EnumInOtherNs;
        i5 : OtherNamespace.MyEnums.EnumTest;
        someString : STRING;
    END_STRUCT
END_TYPE
END_NAMESPACE

NAMESPACE PortTypesInDifNamespaces.NestedNamespace
TYPE
    Test : STRUCT
        i1 : UDINT;
        i2 : UDINT;
        i3 : i3Array;
        arrayOfEnums : arrayOfEnumsArray;
        i4 : PortTypesInDifNamespaces.NestedNamespace.MyNestedEnums.EnumInNestedNs;
        i5 : PortTypesInDifNamespaces.NestedNamespace.MyEnums.EnumTest;
        someString : STRING;
    END_STRUCT
END_TYPE
END_NAMESPACE

NAMESPACE PortTypesInDifNamespaces.NestedNamespace.MyNestedEnums
TYPE
    EnumInNestedNs : (e1 := 0, e2 := 1, e3 := 12) OF DINT;
END_TYPE
END_NAMESPACE

NAMESPACE OtherNamespace.MyOtherEnums
TYPE
    EnumInOtherNs : (e1 := 0, e2 := 1, e3 := 12) OF DINT;
END_TYPE
END_NAMESPACE

NAMESPACE OtherNamespace.MyEnums
TYPE
    EnumTest : (e1 := 0, e2 := 1, e3 := 12) OF DINT;
END_TYPE
END_NAMESPACE

NAMESPACE PortTypesInDifNamespaces.NestedNamespace.MyEnums
TYPE
    EnumTest : (e1 := 0, e2 := 1, e3 := 12) OF DINT;
END_TYPE
END_NAMESPACE

TYPE
    myArrayOfStringArray : ARRAY [0..2] OF STRING;
    arrayOfOtherEnumArray : ARRAY [0..2] OF OtherNamespace.MyEnums.EnumTest;
    arrayOfNestedEnumArray : ARRAY [0..2] OF PortTypesInDifNamespaces.NestedNamespace.MyEnums.EnumTest;
    u3Array : ARRAY [0..4] OF DINT;
    i3Array : ARRAY [0..9] OF INT;
    i3Array : ARRAY [0..9] OF SINT;
    arrayOfEnumsArray : ARRAY [0..2] OF OtherNamespace.MyEnums.EnumTest;
    i3Array : ARRAY [0..4] OF DINT;
    arrayOfEnumsArray : ARRAY [0..2] OF PortTypesInDifNamespaces.NestedNamespace.MyEnums.EnumTest;

    myStringPortString10 : STRING[10];
    myStringPort2String10 : STRING[10];
END_TYPE



